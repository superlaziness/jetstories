{"version":3,"sources":["header.jsx","story-recorder/timer.jsx","story-recorder/process-hook.js","story-recorder/camera-recorder-hook.js","story-recorder/camera-recorder.jsx","story-recorder/trimmer.jsx","story-recorder/editor-hook.js","story-recorder/editor.jsx","story-recorder/story-recorder.jsx","content.jsx","app.jsx","reportWebVitals.js","index.js"],"names":["Header","className","rowCn","colCn","href","target","rel","Timer","time","isRunning","onOver","useEffect","timeout","setTimeout","clearTimeout","cn","style","transitionDuration","useProcessVideo","player","resultRef","current","blob","trimState","a","startTrimmerOption","startTime","toFixed","endTrimmerOption","endTime","console","log","arrayBuffer","worker","Worker","ffmpegworker","onmessage","e","msg","data","type","postMessage","MEMFS","name","arguments","newBlob","Blob","Uint8Array","from","URL","createObjectURL","src","play","useCameraRecorder","cameraRef","onRecordComplete","isRecording","stream","useRef","recorder","handleDateReceive","initRecorder","navigator","mediaDevices","getUserMedia","video","facingMode","audio","MediaRecorder","mimeType","ondataavailable","srcObject","getTracks","forEach","track","stop","start","startRecording","stopRecording","CameraRecorder","ref","autoPlay","muted","Trimmer","onChange","domain","values","mode","onUpdate","handles","getHandleProps","map","handle","i","left","percent","marginLeft","id","right","tracks","getTrackProps","source","width","key","useEditor","playerRef","onEdit","trimmer","useState","setStartTime","setEndTime","duration","setDuration","looper","playingDuration","resetTime","currentTime","runPlayer","Infinity","isNaN","Promise","r","Math","random","addEventListener","removeEventListener","trim","value","isStartTrimmed","isEndTrimmed","endTrimTime","trimEnd","Editor","videoData","Recorder","bp","useBreakpoint","state","setState","recordedData","setRecordedData","trimData","setTrimData","run","sm","loop","controls","onClick","file","files","fileReader","FileReader","onloadend","readerEvent","result","readAsArrayBuffer","status","Content","textCn","useTextStyles","md","flow","App","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAoBeA,G,OAdA,kBACb,cAAC,IAAD,CAAWC,UAAWC,IAAtB,SACE,qBAAKD,UAAWE,IAAhB,SACE,mBACEC,KAAK,4BACLC,OAAO,SACPC,IAAI,sBAHN,SAKE,qBAAKL,UAAU,0D,iDCiBRM,EA3BD,SAAC,GAAsC,IAAD,IAAnCC,YAAmC,MAA5B,GAA4B,EAAxBC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OAWrC,OAVAC,qBAAU,WACR,IAAIC,EAIJ,OAHIH,IACFG,EAAUC,WAAWH,EAAe,IAAPF,IAExB,WACDI,GAASE,aAAaF,MAE3B,CAACH,IAGF,qBAAKR,UAAWc,IAAG,QAASN,GAAa,kBAAzC,SACE,qBACER,UAAWc,IAAG,MAAON,GAAa,gBAClCO,MAAO,CAAEC,mBAAmB,GAAD,OAAKT,EAAL,W,kCC0CpBU,EA1DS,SAAC,GAAmB,IACpCC,EADmC,EAAhBC,UACAC,QAsDzB,OArDa,uCAAG,WAAOC,EAAMC,GAAb,qBAAAC,EAAA,6DACRC,GAA8B,OAATF,QAAS,IAATA,OAAA,EAAAA,EAAWG,WAClC,CAAC,MAAOH,EAAUG,UAAUC,QAAQ,IACpC,GACEC,GAA4B,OAATL,QAAS,IAATA,OAAA,EAAAA,EAAWM,SAChC,CAAC,OAAQN,EAAUM,QAAU,KAAMF,QAAQ,IAC3C,GAEJG,QAAQC,IAAI,iBAAkBN,EAAoBG,GARpC,SASYN,EAAKU,cATjB,OASRA,EATQ,QAURC,EAAS,IAAIC,OAAOC,MACnBC,UAAY,SAAAC,GACjB,IAAMC,EAAMD,EAAEE,KACd,OAAQD,EAAIE,MACV,IAAK,QACHV,QAAQC,IAAI,gBACZE,EAAOQ,YAAY,CACjBD,KAAM,MACNE,MAAO,CAAC,CAAEC,KAAM,YAAaJ,KAAMP,IACnCY,UAAU,CACR,KACA,aAFO,OAGJnB,EACAG,EAJI,CAKP,UACA,UACA,OACA,cAGJ,MACF,IAAK,SACHE,QAAQC,IAAI,gBAAiBO,EAAIC,MACjC,MACF,IAAK,SACHT,QAAQC,IAAI,gBAAiBO,EAAIC,MACjC,MACF,IAAK,OACHT,QAAQC,IAAI,cAAeO,EAAIC,MAC/B,IAAMM,EAAU,IAAIC,KAAK,CAACC,WAAWC,KAAKV,EAAIC,KAAKG,MAAM,GAAGH,OAAQ,CAClEC,KAAM,+BAEFD,EAAOU,IAAIC,gBAAgBL,GACjC1B,EAAOgC,IAAMZ,EACbpB,EAAOiC,OACPtB,QAAQC,IAAI,OAAQT,GACpB,MACF,QACEQ,QAAQC,IAAI,aAhDJ,2CAAH,yDC6CAsB,EAhDW,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,iBAAkBC,EAAkB,EAAlBA,YAClDC,EAASC,mBACTC,EAAWD,iBAAO,MAElBE,EAAoB,SAAAvB,GACxBkB,EAAiBlB,EAAEE,OAGfsB,EAAY,uCAAG,sBAAArC,EAAA,sEACIsC,UAAUC,aAAaC,aAAa,CACzDC,MAAO,CACLC,WAAY,QAEdC,OAAO,IALU,OACnBV,EAAOpC,QADY,OAOnBsC,EAAStC,QAAU,IAAI+C,cAAcX,EAAOpC,QAAS,CACnDgD,SAAU,sCAEZV,EAAStC,QAAQiD,gBAAkBV,GAEnC,OAAIN,QAAJ,IAAIA,OAAJ,EAAIA,EAAWjC,WACbiC,EAAUjC,QAAQkD,UAAYd,EAAOpC,SAbpB,2CAAH,qDAiBlBV,qBAAU,WAER,OADAkD,IACO,WAAO,IAAD,EACX,UAAAJ,EAAOpC,eAAP,SAAgBmD,YAAYC,SAAQ,SAAAC,GAClCA,EAAMC,aAGT,CAACrB,IAUJ3C,qBAAU,WACJ6C,EATiB,WAAO,IAAD,EAC3B,UAAAG,EAAStC,eAAT,SAAkBuD,QAQDC,GALG,WAAO,IAAD,EAC1B,UAAAlB,EAAStC,eAAT,SAAkBsD,OAKbG,KACJ,CAACtB,KC3BSuB,EAfQ,SAAC,GAAuC,IAArCxB,EAAoC,EAApCA,iBAAkBC,EAAkB,EAAlBA,YACpCF,EAAYI,mBAMlB,OALAL,EAAkB,CAChBC,YACAE,cACAD,qBAEK,uBAAOyB,IAAK1B,EAAW2B,UAAQ,EAACC,OAAK,K,kCCoD/BC,G,OAxDC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,eAAC,IAAD,CACEC,OAAQ,CAAC,EAAG,KACZC,OAAQ,CAAC,EAAG,KACZC,KAAM,EACNtF,UAAU,UACVuF,SAAUJ,EALZ,UAOE,qBAAKnF,UAAU,UACf,cAAC,IAAD,UACG,gBAAGwF,EAAH,EAAGA,QAASC,EAAZ,EAAYA,eAAZ,OACC,8BACGD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACX,6CACE5F,UAAU,SAEVe,MAAO,CACL8E,KAAK,GAAD,OAAKF,EAAOG,QAAZ,KACJC,WAAkB,IAANH,EAAU,QAAU,IAE9BH,EAAeE,EAAOK,KAP5B,aASS,IAANJ,EACC,cAAC,IAAD,CAAU5F,UAAU,kCAEpB,cAAC,IAAD,CAAWA,UAAU,qCAVlB2F,EAAOK,YAiBtB,cAAC,IAAD,CAAQH,MAAM,EAAOI,OAAO,EAA5B,SACG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,cAAX,OACC,8BACGD,EAAOR,KAAI,gBAAGM,EAAH,EAAGA,GAAII,EAAP,EAAOA,OAAQhG,EAAf,EAAeA,OAAf,OACV,uDACEW,MAAO,CACL8E,KAAK,GAAD,OAAKO,EAAON,QAAZ,KACJO,MAAM,GAAD,OAAKjG,EAAO0F,QAAUM,EAAON,QAA7B,OAEHK,EAAcH,IALpB,IAMEM,IAAKN,EACLhG,UAAU,wBCiCTuG,EAlFG,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,OAAQpF,EAAW,EAAXA,KAChCqF,EAAUjD,iBAAO,IAD0B,EAEfkD,mBAAS,GAFM,mBAE1ClF,EAF0C,KAE/BmF,EAF+B,OAGnBD,mBAAS,GAHU,mBAG1C/E,EAH0C,KAGjCiF,EAHiC,OAIjBF,mBAAS,GAJQ,mBAI1CG,EAJ0C,KAIhCC,EAJgC,KAM3CC,EAAS,SAAA5E,GACb,IAAM6E,EACH7E,EAAEhC,OAAO0G,SAAWJ,EAAQtF,QAAQ,GAAM,KAAOgB,EAAEhC,OAAO0G,SACvDI,EAAaR,EAAQtF,QAAQ,GAAKgB,EAAEhC,OAAO0G,SAAY,KAAO,EAChE1E,EAAEhC,OAAO+G,aAAeF,IAC1B7E,EAAEhC,OAAO+G,YAAcD,EACvB9E,EAAEhC,OAAO+C,SAIPiE,EAAS,uCAAG,4BAAA7F,EAAA,sDACVe,EAAOU,IAAIC,gBAAgB5B,GAEjCmF,EAAUpF,QAAQ8B,IAAMZ,EAHR,UAMdkE,EAAUpF,QAAQ0F,WAAaO,MAC/BC,MAAMd,EAAUpF,QAAQ0F,UAPV,gCASR,IAAIS,SAAQ,SAAAC,GAAC,OAAI5G,WAAW4G,EAAG,QATvB,OAUd3F,QAAQC,IAAI0E,EAAUpF,QAAQ0F,UAC9BN,EAAUpF,QAAQ+F,YAAc,IAAWM,KAAKC,SAXlC,sBAahBX,EAAYP,EAAUpF,QAAQ0F,UAC9BN,EAAUpF,QAAQ+F,YAAc,EAEhCX,EAAUpF,QAAQ+B,OAhBF,4CAAH,qDAmBfzC,qBAAU,WAKR,OAJIW,GAAQmF,EAAUpF,UACpBgG,IACAZ,EAAUpF,QAAQuG,iBAAiB,aAAcX,IAE5C,WAAO,IAAD,EACX,UAAAR,EAAUpF,eAAV,SAAmBwG,oBAAoB,aAAcZ,MAEtD,CAAC3F,IAoCJ,OARAX,qBAAU,WACR+F,EAAO,CACLhF,YACAG,UACAkF,eAED,CAACrF,EAAWG,EAASkF,IAEjB,CAAEe,KAlBI,SAAAC,GACX,IAAMC,EACJD,EAAM,KAAOpB,EAAQtF,QAAQ,IAAM0G,EAAM,KAAOpB,EAAQtF,QAAQ,GAC5D4G,EACJF,EAAM,KAAOpB,EAAQtF,QAAQ,IAAM0G,EAAM,KAAOpB,EAAQtF,QAAQ,GAClEsF,EAAQtF,QAAU0G,EACdC,GArBAvB,EAAUpF,QAAQ0F,WAAaO,MACnCb,EAAUpF,QAAQ+F,YACfT,EAAQtF,QAAQ,GAAKoF,EAAUpF,QAAQ0F,SAAY,IACtDN,EAAUpF,QAAQ+B,OAClByD,EAAaJ,EAAUpF,QAAQ+F,cAkB3Ba,GAfU,WACd,GAAIxB,EAAUpF,QAAQ0F,WAAaO,IAAnC,CACA,IAAMY,EAAevB,EAAQtF,QAAQ,GAAKoF,EAAUpF,QAAQ0F,SAAY,IACxEN,EAAUpF,QAAQ+F,YAAcc,EAAc,GAC9CzB,EAAUpF,QAAQ+B,OAClB0D,EAAWoB,IAUOC,MC/CPC,EAhBA,SAAC,GAA2B,IAAzB1B,EAAwB,EAAxBA,OAAQ2B,EAAgB,EAAhBA,UAClB5B,EAAY/C,mBACVoE,EAAStB,EAAU,CAAEE,SAAQpF,KAAM+G,EAAW5B,cAA9CqB,KACR,OACE,qCACE,uBAAO9C,IAAKyB,EAAWvB,OAAK,IAC5B,cAAC,EAAD,CAASE,SAAU0C,QC+DVQ,EA/DE,SAAC,GAAmB,IAAjBrI,EAAgB,EAAhBA,UACZsI,EAAKC,cADuB,EAER5B,mBAAS,QAFD,mBAE3B6B,EAF2B,KAEpBC,EAFoB,OAGM9B,mBAAS,MAHf,mBAG3B+B,EAH2B,KAGbC,EAHa,OAIFhC,mBAAS,IAJP,mBAI3BiC,EAJ2B,KAIjBC,EAJiB,KAK5B1H,EAAYsC,iBAAO,MACnBqF,EAAM7H,EAAgB,CAAEE,cAe9B,OADAU,QAAQC,IAAI,QAAS0G,EAAOI,EAAUF,GAEpC,sBAAK1I,UAAWc,IAAGd,EAAW,sBAA9B,UACE,sBAAKA,UAAWsI,EAAG,SAAU,CAAES,GAAI,eAAnC,UACa,aAAVP,GACC,cAAC,EAAD,CACElF,iBAAkBqF,EAClBpF,YAAuB,cAAViF,IAGN,aAAVA,GACC,cAAC,EAAD,CAAQJ,UAAWM,EAAcjC,OAAQoC,IAEhC,aAAVL,GACC,uBAAOzD,IAAK5D,EAAW6D,UAAQ,EAACC,OAAK,EAAC+D,MAAI,EAACC,UAAQ,OAGvD,cAAC,EAAD,CACE1I,KAAM,GACNC,UAAqB,cAAVgI,EACX/H,OAAQ,kBAAMgI,EAAS,eAEzB,0CAAaD,KACb,cAAC,IAAD,CACElD,KAAK,WACL4D,QAAS,kBACPT,EAAmB,cAAVD,EAAwB,WAAa,cAHlD,oBAQA,cAAC,IAAD,CAAQlD,KAAK,WAAW4D,QAAS,kBAAMT,EAAS,SAAhD,mBAGA,cAAC,IAAD,CAAQnD,KAAK,WAAW4D,QAAS,kBAAMJ,EAAIJ,EAAcE,IAAzD,qBAGA,uBAAOrG,KAAK,OAAOyD,GAAG,QAAQb,SAlDf,SAAA/C,GACjB,IAAM+G,EAAO/G,EAAEhC,OAAOgJ,MAAM,GACtBC,EAAa,IAAIC,WACvBD,EAAWE,UAAY,SAAAC,GACrB,IAAMzH,EAAcyH,EAAYpJ,OAAOqJ,OACjCpI,EAAO,IAAIwB,KAAK,CAAC,IAAIC,WAAWf,IAAe,CACnDQ,KAAM,sCAERoG,EAAgBtH,GAChBoH,EAAS,aAEXY,EAAWK,kBAAkBP,MAwC3B,4BAAIQ,aCjCKC,EA7BC,WACd,IAAMC,EAASC,cACTxB,EAAKC,cACX,OACE,cAAC,IAAD,UACE,sBAAKvI,UAAU,UAAf,UACE,oBAAIA,UAAWc,IAAG,SAAU+I,EAAO,WAAY,UAA/C,wBAGA,cAAC,EAAD,CACE7J,UAAWc,IAAG,SAAUwH,EAAG,eAAgB,CAAEyB,GAAI,gBAEnD,oBACE/J,UAAWc,IACT,SACA,OACA+I,EAAO,gBAAiB,CAAEG,MAAM,KAJpC,gBAQE,uBARF,2F,OCIOC,MAff,WACE,OACE,cAAC,IAAD,CAAeC,MAAM,OAArB,SACE,eAAC,IAAD,CAAQlK,UAAU,SAAlB,UACE,cAAC,IAAD,UACE,cAAC,EAAD,MAEF,cAAC,IAAD,UACE,cAAC,EAAD,YCNKmK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e7f217e8.chunk.js","sourcesContent":["import React from 'react';\n\nimport { colCn, rowCn, Container } from '@webteam/layout';\n\nimport './logos.css';\n\nconst Header = () => (\n  <Container className={rowCn}>\n    <div className={colCn}>\n      <a\n        href=\"https://www.jetbrains.com\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <div className=\"jetbrains-logo _logo-jetbrains-square _size-3\" />\n      </a>\n    </div>\n  </Container>\n);\n\nexport default Header;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nconst Timer = ({ time = 10, isRunning, onOver }) => {\n  useEffect(() => {\n    let timeout;\n    if (isRunning) {\n      timeout = setTimeout(onOver, time * 1000);\n    }\n    return () => {\n      if (timeout) clearTimeout(timeout);\n    };\n  }, [isRunning]);\n\n  return (\n    <div className={cn('timer', isRunning && 'timer__running')}>\n      <div\n        className={cn('bar', isRunning && 'bar__running')}\n        style={{ transitionDuration: `${time}s` }}\n      />\n    </div>\n  );\n};\n\nTimer.propTypes = {\n  time: PropTypes.number,\n  isRunning: PropTypes.bool,\n  onOver: PropTypes.func\n};\n\nexport default Timer;\n","// eslint-disable-next-line import/extensions\nimport ffmpegworker from '!!file-loader!ffmpeg.js/ffmpeg-worker-mp4.js';\n\nconst useProcessVideo = ({ resultRef }) => {\n  const player = resultRef.current;\n  const process = async (blob, trimState) => {\n    const startTrimmerOption = trimState?.startTime\n      ? ['-ss', trimState.startTime.toFixed(1)]\n      : [];\n    const endTrimmerOption = trimState?.endTime\n      ? ['-to', (trimState.endTime + 0.15).toFixed(1)]\n      : [];\n\n    console.log('trimmer option', startTrimmerOption, endTrimmerOption);\n    const arrayBuffer = await blob.arrayBuffer();\n    const worker = new Worker(ffmpegworker);\n    worker.onmessage = e => {\n      const msg = e.data;\n      switch (msg.type) {\n        case 'ready':\n          console.log('worker ready');\n          worker.postMessage({\n            type: 'run',\n            MEMFS: [{ name: 'input.mkv', data: arrayBuffer }],\n            arguments: [\n              '-i',\n              'input.mkv',\n              ...startTrimmerOption,\n              ...endTrimmerOption,\n              '-copyts',\n              '-vcodec',\n              'copy',\n              'out.mp4'\n            ]\n          });\n          break;\n        case 'stdout':\n          console.log('worker stdout', msg.data);\n          break;\n        case 'stderr':\n          console.log('worker stderr', msg.data);\n          break;\n        case 'done':\n          console.log('worker done', msg.data);\n          const newBlob = new Blob([Uint8Array.from(msg.data.MEMFS[0].data)], {\n            type: 'video/mp4;codecs=h264,opus'\n          });\n          const data = URL.createObjectURL(newBlob);\n          player.src = data;\n          player.play();\n          console.log('blob', blob);\n          break;\n        default:\n          console.log('default');\n          break;\n      }\n    };\n  };\n  return process;\n};\n\nexport default useProcessVideo;\n","import { useEffect, useRef } from 'react';\n\nconst useCameraRecorder = ({ cameraRef, onRecordComplete, isRecording }) => {\n  const stream = useRef();\n  const recorder = useRef(null);\n\n  const handleDateReceive = e => {\n    onRecordComplete(e.data);\n  };\n\n  const initRecorder = async () => {\n    stream.current = await navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: 'user'\n      },\n      audio: true\n    });\n    recorder.current = new MediaRecorder(stream.current, {\n      mimeType: 'video/x-matroska;codecs=avc1,opus'\n    });\n    recorder.current.ondataavailable = handleDateReceive;\n\n    if (cameraRef?.current) {\n      cameraRef.current.srcObject = stream.current;\n    }\n  };\n\n  useEffect(() => {\n    initRecorder();\n    return () => {\n      stream.current?.getTracks().forEach(track => {\n        track.stop();\n      });\n    };\n  }, [cameraRef]);\n\n  const startRecording = () => {\n    recorder.current?.start();\n  };\n\n  const stopRecording = () => {\n    recorder.current?.stop();\n  };\n\n  useEffect(() => {\n    if (isRecording) startRecording();\n    else stopRecording();\n  }, [isRecording]);\n};\n\nexport default useCameraRecorder;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useCameraRecorder from './camera-recorder-hook';\n\nconst CameraRecorder = ({ onRecordComplete, isRecording }) => {\n  const cameraRef = useRef();\n  useCameraRecorder({\n    cameraRef,\n    isRecording,\n    onRecordComplete\n  });\n  return <video ref={cameraRef} autoPlay muted />;\n};\n\nCameraRecorder.propTypes = {\n  onRecordComplete: PropTypes.func.isRequired,\n  isRecording: PropTypes.bool\n};\n\nexport default CameraRecorder;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Slider, Handles, Tracks } from 'react-compound-slider';\n\nimport { LeftIcon, RightIcon } from '@webteam/icons';\n\nimport './trimmer.css';\n\nconst Trimmer = ({ onChange }) => (\n  <Slider\n    domain={[0, 100]}\n    values={[0, 100]}\n    mode={2}\n    className=\"wrapper\"\n    onUpdate={onChange}\n  >\n    <div className=\"track\" />\n    <Handles>\n      {({ handles, getHandleProps }) => (\n        <div>\n          {handles.map((handle, i) => (\n            <div\n              className=\"handle\"\n              key={handle.id}\n              style={{\n                left: `${handle.percent}%`,\n                marginLeft: i === 0 ? '-30px' : 0\n              }}\n              {...getHandleProps(handle.id)}\n            >\n              {i === 0 ? (\n                <LeftIcon className=\"handle-icon handle-icon__left\" />\n              ) : (\n                <RightIcon className=\"handle-icon handle-icon__right\" />\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </Handles>\n    <Tracks left={false} right={false}>\n      {({ tracks, getTrackProps }) => (\n        <div>\n          {tracks.map(({ id, source, target }) => (\n            <div\n              style={{\n                left: `${source.percent}%`,\n                width: `${target.percent - source.percent}%`\n              }}\n              {...getTrackProps(id)}\n              key={id}\n              className=\"track\"\n            />\n          ))}\n        </div>\n      )}\n    </Tracks>\n  </Slider>\n);\n\nTrimmer.propTypes = {\n  onChange: PropTypes.func.isRequired\n};\n\nexport default Trimmer;\n","import { useEffect, useRef, useState } from 'react';\n\nconst useEditor = ({ playerRef, onEdit, blob }) => {\n  const trimmer = useRef([]);\n  const [startTime, setStartTime] = useState(0);\n  const [endTime, setEndTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n\n  const looper = e => {\n    const playingDuration =\n      (e.target.duration * trimmer.current[1]) / 100 || e.target.duration;\n    const resetTime = (trimmer.current[0] * e.target.duration) / 100 || 0;\n    if (e.target.currentTime >= playingDuration) {\n      e.target.currentTime = resetTime;\n      e.target.play();\n    }\n  };\n\n  const runPlayer = async () => {\n    const data = URL.createObjectURL(blob);\n    // playerRef.current.style.opacity = 0;\n    playerRef.current.src = data;\n    // set duration chrome bug hack\n    while (\n      playerRef.current.duration === Infinity ||\n      isNaN(playerRef.current.duration)\n    ) {\n      await new Promise(r => setTimeout(r, 200));\n      console.log(playerRef.current.duration);\n      playerRef.current.currentTime = 10000000 * Math.random();\n    }\n    setDuration(playerRef.current.duration);\n    playerRef.current.currentTime = 0;\n    // playerRef.current.style.opacity = 1;\n    playerRef.current.play();\n  };\n\n  useEffect(() => {\n    if (blob && playerRef.current) {\n      runPlayer();\n      playerRef.current.addEventListener('timeupdate', looper);\n    }\n    return () => {\n      playerRef.current?.removeEventListener('timeupdate', looper);\n    };\n  }, [blob]);\n\n  const trimStart = () => {\n    if (playerRef.current.duration === Infinity) return;\n    playerRef.current.currentTime =\n      (trimmer.current[0] * playerRef.current.duration) / 100;\n    playerRef.current.play();\n    setStartTime(playerRef.current.currentTime);\n  };\n\n  const trimEnd = () => {\n    if (playerRef.current.duration === Infinity) return;\n    const endTrimTime = (trimmer.current[1] * playerRef.current.duration) / 100;\n    playerRef.current.currentTime = endTrimTime - 0.2;\n    playerRef.current.play();\n    setEndTime(endTrimTime);\n  };\n\n  const trim = value => {\n    const isStartTrimmed =\n      value[0] !== trimmer.current[0] && value[1] === trimmer.current[1];\n    const isEndTrimmed =\n      value[1] !== trimmer.current[1] && value[0] === trimmer.current[0];\n    trimmer.current = value;\n    if (isStartTrimmed) trimStart();\n    if (isEndTrimmed) trimEnd();\n  };\n\n  useEffect(() => {\n    onEdit({\n      startTime,\n      endTime,\n      duration\n    });\n  }, [startTime, endTime, duration]);\n\n  return { trim };\n};\n\nexport default useEditor;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Trimmer from './trimmer';\n\nimport useEditor from './editor-hook';\n\nconst Editor = ({ onEdit, videoData }) => {\n  const playerRef = useRef();\n  const { trim } = useEditor({ onEdit, blob: videoData, playerRef });\n  return (\n    <>\n      <video ref={playerRef} muted />\n      <Trimmer onChange={trim} />\n    </>\n  );\n};\n\nEditor.propTypes = {\n  onEdit: PropTypes.func.isRequired,\n  videoData: PropTypes.object\n};\n\nexport default Editor;\n","import React, { useRef, useState } from 'react';\nimport cn from 'classnames';\n\nimport { useBreakpoint } from '@webteam/breakpoints';\nimport Button from '@webteam/button';\n\nimport Timer from './timer';\n\nimport useProcessVideo from './process-hook';\n\nimport CameraRecorder from './camera-recorder';\nimport Editor from './editor';\n\nconst Recorder = ({ className }) => {\n  const bp = useBreakpoint();\n  const [state, setState] = useState('idle');\n  const [recordedData, setRecordedData] = useState(null);\n  const [trimData, setTrimData] = useState({});\n  const resultRef = useRef(null);\n  const run = useProcessVideo({ resultRef });\n  const handleFile = e => {\n    const file = e.target.files[0];\n    const fileReader = new FileReader();\n    fileReader.onloadend = readerEvent => {\n      const arrayBuffer = readerEvent.target.result;\n      const blob = new Blob([new Uint8Array(arrayBuffer)], {\n        type: 'video/x-matroska;codecs=avc1,opus'\n      });\n      setRecordedData(blob);\n      setState('recorded');\n    };\n    fileReader.readAsArrayBuffer(file);\n  };\n  console.log('state', state, trimData, recordedData);\n  return (\n    <div className={cn(className, 'recorder-container')}>\n      <div className={bp('player', { sm: 'player__sm' })}>\n        {state !== 'recorded' && (\n          <CameraRecorder\n            onRecordComplete={setRecordedData}\n            isRecording={state === 'recording'}\n          />\n        )}\n        {state === 'recorded' && (\n          <Editor videoData={recordedData} onEdit={setTrimData} />\n        )}\n        {state === 'recorded' && (\n          <video ref={resultRef} autoPlay muted loop controls />\n        )}\n      </div>\n      <Timer\n        time={10}\n        isRunning={state === 'recording'}\n        onOver={() => setState('recorded')}\n      />\n      <div>state: {state}</div>\n      <Button\n        mode=\"contrast\"\n        onClick={() =>\n          setState(state === 'recording' ? 'recorded' : 'recording')\n        }\n      >\n        Record\n      </Button>\n      <Button mode=\"contrast\" onClick={() => setState('idle')}>\n        Clear\n      </Button>\n      <Button mode=\"contrast\" onClick={() => run(recordedData, trimData)}>\n        Process\n      </Button>\n      <input type=\"file\" id=\"hello\" onChange={handleFile} />\n      <p>{status}</p>\n    </div>\n  );\n};\n\nexport default Recorder;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Container } from '@webteam/layout';\nimport { useTextStyles } from '@webteam/typography';\nimport { useBreakpoint } from '@webteam/breakpoints';\n\nimport StoryRecorder from './story-recorder';\n\nconst Content = () => {\n  const textCn = useTextStyles();\n  const bp = useBreakpoint();\n  return (\n    <Container>\n      <div className=\"content\">\n        <h1 className={cn('column', textCn('wt-hero'), 'header')}>\n          JetStories\n        </h1>\n        <StoryRecorder\n          className={cn('column', bp('recorder__lg', { md: 'recorder' }))}\n        />\n        <p\n          className={cn(\n            'column',\n            'text',\n            textCn('wt-subtitle-2', { flow: true })\n          )}\n        >\n          Hi!\n          <br />\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor.\n        </p>\n      </div>\n    </Container>\n  );\n};\n\nexport default Content;\n","import React from 'react';\n\nimport { ThemeProvider } from '@webteam/ui-contexts';\nimport { Layout, LayoutHeader, LayoutContent } from '@webteam/layout';\n\nimport Header from './header';\nimport Content from './content';\n\nimport '@webteam/colors/lib/index.css';\n\nfunction App() {\n  return (\n    <ThemeProvider theme=\"dark\">\n      <Layout className=\"layout\">\n        <LayoutHeader>\n          <Header />\n        </LayoutHeader>\n        <LayoutContent>\n          <Content />\n        </LayoutContent>\n      </Layout>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}