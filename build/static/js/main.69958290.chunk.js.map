{"version":3,"sources":["header.jsx","aws-hook.js","config.js","story-recorder/camera-recorder-hook.js","story-recorder/timer.jsx","story-recorder/camera-recorder.jsx","story-recorder/trimmer.jsx","story-recorder/editor-hook.js","story-recorder/editor.jsx","story-recorder/story-recorder.jsx","story-recorder/process-hook.js","recorder-page.jsx","story-list/story.jsx","story-list/story-list.jsx","story-list/player-hook.js","player-page.jsx","app.jsx","reportWebVitals.js","index.js"],"names":["Header","isFull","onButtonClick","textCn","useTextStyles","className","rowCn","alignItems","colCn","default","href","target","rel","cn","onClick","mode","icon","useS3","onSuccess","onError","useState","list","setList","useEffect","AWS","config","region","credentials","CognitoIdentityCredentials","IdentityPoolId","upload","file","S3","ManagedUpload","params","Bucket","Key","Date","getTime","Body","ACL","promise","then","data","err","getList","apiVersion","listObjects","Delimiter","Contents","console","log","useCameraRecorder","cameraRef","onRecordComplete","isRecording","stream","useRef","recorder","handleDateReceive","e","initRecorder","a","MediaRecorder","test","navigator","userAgent","mediaDevices","getUserMedia","video","facingMode","width","ideal","height","audio","current","mimeType","ondataavailable","srcObject","getTracks","forEach","track","stop","start","startRecording","stopRecording","Timer","time","isRunning","onOver","timeout","setTimeout","clearTimeout","style","transitionDuration","squareIcon","viewBox","x","y","fill","CameraRecorder","onClickRecordStart","onClickRecordStop","ref","autoPlay","muted","Trimmer","onChange","domain","values","onUpdate","handles","getHandleProps","map","handle","i","left","percent","marginLeft","id","right","tracks","getTrackProps","source","key","useEditor","playerRef","onEdit","blob","trimmer","startTime","setStartTime","endTime","setEndTime","duration","setDuration","looper","playingDuration","resetTime","currentTime","play","runPlayer","URL","createObjectURL","opacity","src","Infinity","isNaN","Promise","r","Math","random","addEventListener","removeEventListener","trim","value","isStartTrimmed","isEndTrimmed","endTrimTime","trimEnd","Editor","videoData","onClickCancel","onClickUpload","Recorder","bp","useBreakpoint","state","setState","recordedData","setRecordedData","trimData","setTrimData","message","processVideo","onProgress","onFinish","trimState","startTrimmerOption","toFixed","endTrimmerOption","worker","FFMPEGWebworkerClient","on","inputFile","runCommand","msg","newBlob","Blob","type","useProcessVideo","handleFile","files","fileReader","FileReader","onloadend","readerEvent","arrayBuffer","result","Uint8Array","readAsArrayBuffer","sm","radius","stroke","visible","input","document","createElement","onchange","capture","accept","click","RecorderPage","md","flow","Story","onPlay","onStop","isPlaying","filePath","videoRef","paused","pause","videoIsReady","setVideoIsReady","load","oncanplaythrough","onended","story__ready","story__playing","preload","playsInline","StoryList","activePlayer","setActivePlayer","index","undefined","usePlayer","sort","b","LastModified","lg","length","Array","val","PlayerPage","App","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.69958290.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport { colCn, rowCn, Container } from '@webteam/layout';\nimport { useTextStyles } from '@webteam/typography';\nimport Button from '@webteam/button';\nimport { CloseIcon } from '@webteam/icons';\n\nimport './logos.css';\n\nconst Header = ({ isFull, onButtonClick }) => {\n  const textCn = useTextStyles();\n  return (\n    <Container>\n      <div className={rowCn({ alignItems: 'end' })}>\n        <div className={colCn({ default: 'inline' })}>\n          <a\n            href=\"https://www.jetbrains.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <div className=\"jetbrains-logo _logo-jetbrains-square _size-3\" />\n          </a>\n        </div>\n        {isFull && (\n          <>\n            <div className={colCn({ default: 'auto-fill' })}>\n              <span className={textCn('wt-h2')}>JetStories</span>\n            </div>\n            <div\n              className={cn(colCn({ default: 'inline' }), 'wt-offset-top-24')}\n            >\n              <Button onClick={onButtonClick} mode=\"contrast\">\n                Add your story!\n              </Button>\n            </div>\n          </>\n        )}\n        {!isFull && (\n          <>\n            <div className={colCn({ default: 'auto-fill' })}> </div>\n            <div className={colCn({ default: 'inline' })}>\n              <Button\n                onClick={onButtonClick}\n                icon={<CloseIcon />}\n                mode=\"contrast\"\n              />\n            </div>\n          </>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nHeader.propTypes = {\n  isFull: PropTypes.bool,\n  onButtonClick: PropTypes.func.isRequired\n};\n\nexport default Header;\n","import { useEffect, useState } from 'react';\nimport AWS from 'aws-sdk';\n\nimport { awsIdentityPoolId } from './config';\n\nexport const useS3 = (onSuccess, onError) => {\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    AWS.config.region = 'us-east-1';\n    AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n      IdentityPoolId: awsIdentityPoolId\n    });\n  }, []);\n\n  const getList = () => {\n    const s3 = new AWS.S3({\n      apiVersion: '2006-03-01',\n      params: { Bucket: 'test-sto' }\n    });\n    s3.listObjects({ Delimiter: '/' }, (err, data) => {\n      if (data && data.Contents) setList(data.Contents);\n      if (err) console.log('failed getting list', err);\n    });\n  };\n\n  const upload = file => {\n    const uploadObject = new AWS.S3.ManagedUpload({\n      params: {\n        Bucket: 'test-sto',\n        Key: `${new Date().getTime()}.mp4`,\n        Body: file,\n        ACL: 'public-read'\n      }\n    });\n    const promise = uploadObject.promise();\n    promise.then(\n      data => {\n        onSuccess(data);\n      },\n      err => {\n        onError(err);\n      }\n    );\n  };\n  return { upload, getList, list };\n};\n","export const awsIdentityPoolId =\n  'us-east-1:19b76b20-93c7-4166-891b-88ebf401128e';\nexport const s3Url = 'https://test-sto.s3.amazonaws.com/';\n","import { useEffect, useRef } from 'react';\n\nconst useCameraRecorder = ({\n  cameraRef,\n  onRecordComplete,\n  isRecording,\n  onError\n}) => {\n  const stream = useRef();\n  const recorder = useRef(null);\n\n  const handleDateReceive = e => {\n    onRecordComplete(e.data);\n  };\n\n  const initRecorder = async () => {\n    if (typeof MediaRecorder === 'undefined') {\n      onError('Browser not supported');\n      return;\n    }\n    if (/Android|Mobile|mobile/i.test(navigator.userAgent)) {\n      onError('Browser not supported');\n      return;\n    }\n    stream.current = await navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: 'user',\n        width: { ideal: 4096 },\n        height: { ideal: 2160 }\n      },\n      audio: true\n    });\n    recorder.current = new MediaRecorder(stream.current, {\n      mimeType: 'video/webm;codecs=H264,pcm'\n    });\n    recorder.current.ondataavailable = handleDateReceive;\n\n    if (cameraRef?.current) {\n      cameraRef.current.srcObject = stream.current;\n    }\n  };\n\n  useEffect(() => {\n    initRecorder();\n    return () => {\n      stream.current?.getTracks().forEach(track => {\n        track.stop();\n      });\n    };\n  }, [cameraRef]);\n\n  const startRecording = () => {\n    recorder.current?.start();\n  };\n\n  const stopRecording = () => {\n    recorder.current?.stop();\n  };\n\n  useEffect(() => {\n    if (isRecording) startRecording();\n    else stopRecording();\n  }, [isRecording]);\n};\n\nexport default useCameraRecorder;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nconst Timer = ({ time = 10, isRunning, onOver }) => {\n  useEffect(() => {\n    let timeout;\n    if (isRunning) {\n      timeout = setTimeout(onOver, time * 1000);\n    }\n    return () => {\n      if (timeout) clearTimeout(timeout);\n    };\n  }, [isRunning]);\n\n  return (\n    <div className={cn('timer', isRunning && 'timer__running')}>\n      <div\n        className={cn('bar', isRunning && 'bar__running')}\n        style={{ transitionDuration: `${time}s` }}\n      />\n    </div>\n  );\n};\n\nTimer.propTypes = {\n  time: PropTypes.number,\n  isRunning: PropTypes.bool,\n  onOver: PropTypes.func\n};\n\nexport default Timer;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { CircleIcon } from '@webteam/icons';\n\nimport Button from '@webteam/button';\n\nimport useCameraRecorder from './camera-recorder-hook';\nimport Timer from './timer';\n\nconst squareIcon = (\n  <svg\n    viewBox=\"0 0 24 24\"\n    className=\"wt-icon wt-icon_theme_light wt-icon_size_m\"\n  >\n    <rect x=\"6\" y=\"6\" width=\"12\" height=\"12\" fill=\"white\" />\n  </svg>\n);\n\nconst CameraRecorder = ({\n  onRecordComplete,\n  isRecording,\n  onClickRecordStart,\n  onClickRecordStop,\n  onError\n}) => {\n  const cameraRef = useRef();\n  useCameraRecorder({\n    cameraRef,\n    isRecording,\n    onRecordComplete,\n    onError\n  });\n  return (\n    <>\n      <video ref={cameraRef} autoPlay muted />\n      <Timer time={10} isRunning={isRecording} onOver={onClickRecordStop} />\n      {!isRecording && (\n        <Button\n          mode=\"contrast\"\n          onClick={onClickRecordStart}\n          icon={<CircleIcon className=\"record-icon\" />}\n        >\n          Record\n        </Button>\n      )}\n      {isRecording && (\n        <Button\n          className=\"button__record\"\n          onClick={onClickRecordStop}\n          icon={squareIcon}\n        >\n          Record\n        </Button>\n      )}\n    </>\n  );\n};\n\nCameraRecorder.propTypes = {\n  onRecordComplete: PropTypes.func.isRequired,\n  onClickRecordStart: PropTypes.func.isRequired,\n  onClickRecordStop: PropTypes.func.isRequired,\n  onError: PropTypes.func.isRequired,\n  isRecording: PropTypes.bool\n};\n\nexport default CameraRecorder;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Slider, Handles, Tracks } from 'react-compound-slider';\n\nimport { LeftIcon, RightIcon } from '@webteam/icons';\n\nimport './trimmer.css';\n\nconst Trimmer = ({ onChange }) => (\n  <Slider\n    domain={[0, 100]}\n    values={[0, 100]}\n    mode={2}\n    className=\"wrapper\"\n    onUpdate={onChange}\n  >\n    <div className=\"track\" />\n    <Handles>\n      {({ handles, getHandleProps }) => (\n        <div>\n          {handles.map((handle, i) => (\n            <div\n              className=\"handle\"\n              key={handle.id}\n              style={{\n                left: `${handle.percent}%`,\n                marginLeft: i === 0 ? '-30px' : 0\n              }}\n              {...getHandleProps(handle.id)}\n            >\n              {i === 0 ? (\n                <LeftIcon className=\"handle-icon handle-icon__left\" />\n              ) : (\n                <RightIcon className=\"handle-icon handle-icon__right\" />\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </Handles>\n    <Tracks left={false} right={false}>\n      {({ tracks, getTrackProps }) => (\n        <div>\n          {tracks.map(({ id, source, target }) => (\n            <div\n              style={{\n                left: `${source.percent}%`,\n                width: `${target.percent - source.percent}%`\n              }}\n              {...getTrackProps(id)}\n              key={id}\n              className=\"track\"\n            />\n          ))}\n        </div>\n      )}\n    </Tracks>\n  </Slider>\n);\n\nTrimmer.propTypes = {\n  onChange: PropTypes.func.isRequired\n};\n\nexport default Trimmer;\n","import { useEffect, useRef, useState } from 'react';\n\nconst useEditor = ({ playerRef, onEdit, blob }) => {\n  const trimmer = useRef([]);\n  const [startTime, setStartTime] = useState(0);\n  const [endTime, setEndTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n\n  const looper = e => {\n    const playingDuration =\n      (e.target.duration * trimmer.current[1]) / 100 || e.target.duration;\n    const resetTime = (trimmer.current[0] * e.target.duration) / 100 || 0;\n    if (e.target.currentTime >= playingDuration) {\n      e.target.currentTime = resetTime;\n      e.target.play();\n    }\n  };\n\n  const runPlayer = async () => {\n    const data = URL.createObjectURL(blob);\n    playerRef.current.style.opacity = 0;\n    playerRef.current.src = data;\n    while (\n      playerRef.current.duration === Infinity ||\n      isNaN(playerRef.current.duration)\n    ) {\n      await new Promise(r => setTimeout(r, 200));\n      playerRef.current.currentTime = 10000000 * Math.random();\n    }\n    setDuration(playerRef.current.duration);\n    playerRef.current.currentTime = 0;\n    playerRef.current.style.opacity = 1;\n    playerRef.current.play();\n  };\n\n  useEffect(() => {\n    if (blob && playerRef.current) {\n      runPlayer();\n      playerRef.current.addEventListener('timeupdate', looper);\n    }\n    return () => {\n      playerRef.current?.removeEventListener('timeupdate', looper);\n    };\n  }, [blob]);\n\n  const trimStart = () => {\n    if (playerRef.current.duration === Infinity) return;\n    playerRef.current.currentTime =\n      (trimmer.current[0] * playerRef.current.duration) / 100;\n    playerRef.current.play();\n    setStartTime(playerRef.current.currentTime);\n  };\n\n  const trimEnd = () => {\n    if (playerRef.current.duration === Infinity) return;\n    const endTrimTime = (trimmer.current[1] * playerRef.current.duration) / 100;\n    playerRef.current.currentTime = endTrimTime - 0.2;\n    playerRef.current.play();\n    setEndTime(endTrimTime);\n  };\n\n  const trim = value => {\n    const isStartTrimmed =\n      value[0] !== trimmer.current[0] && value[1] === trimmer.current[1];\n    const isEndTrimmed =\n      value[1] !== trimmer.current[1] && value[0] === trimmer.current[0];\n    trimmer.current = value;\n    if (isStartTrimmed) trimStart();\n    if (isEndTrimmed) trimEnd();\n  };\n\n  useEffect(() => {\n    onEdit({\n      startTime,\n      endTime,\n      duration\n    });\n  }, [startTime, endTime, duration]);\n\n  return { trim };\n};\n\nexport default useEditor;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@webteam/button';\nimport { UploadIcon, TrashIcon } from '@webteam/icons';\n\nimport Trimmer from './trimmer';\n\nimport useEditor from './editor-hook';\n\nconst Editor = ({ onEdit, videoData, onClickCancel, onClickUpload }) => {\n  const playerRef = useRef();\n  const { trim } = useEditor({ onEdit, blob: videoData, playerRef });\n  return (\n    <>\n      {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n      <video ref={playerRef} />\n      <Trimmer onChange={trim} />\n      <Button mode=\"contrast\" icon={<UploadIcon />} onClick={onClickUpload}>\n        Upload\n      </Button>{' '}\n      <Button mode=\"outline\" icon={<TrashIcon />} onClick={onClickCancel}>\n        Cancel\n      </Button>\n    </>\n  );\n};\n\nEditor.propTypes = {\n  onEdit: PropTypes.func.isRequired,\n  onClickCancel: PropTypes.func.isRequired,\n  onClickUpload: PropTypes.func.isRequired,\n  videoData: PropTypes.object\n};\n\nexport default Editor;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport { useBreakpoint } from '@webteam/breakpoints';\nimport { useTextStyles } from '@webteam/typography';\nimport { AttachmentIcon } from '@webteam/icons';\n\nimport Spinner from 'react-spinner-material';\n\nimport Button from '@webteam/button';\n\nimport { useS3 } from '../aws-hook';\n\nimport { useProcessVideo } from './process-hook';\n\nimport CameraRecorder from './camera-recorder';\nimport Editor from './editor';\n\nconst Recorder = ({ className, onSuccess }) => {\n  const bp = useBreakpoint();\n  const textCn = useTextStyles();\n  const [state, setState] = useState('idle');\n  const [recordedData, setRecordedData] = useState(null);\n  const [trimData, setTrimData] = useState({});\n\n  const onProgress = message => console.log('processing', message);\n  const onError = message => console.log('error', message);\n  const handleProcessingFinish = data => {\n    setRecordedData(data);\n    setState('uploading');\n  };\n\n  const processVideo = useProcessVideo(\n    onProgress,\n    handleProcessingFinish,\n    onError\n  );\n\n  const { upload } = useS3(() => setState('success'), onError);\n\n  useEffect(() => {\n    if (state === 'idle') {\n      setRecordedData(null);\n      setTrimData({});\n    }\n    if (state === 'processing') {\n      processVideo(recordedData, trimData);\n    }\n    if (state === 'uploading') {\n      upload(recordedData);\n      console.log(upload);\n    }\n    if (state === 'success') {\n      setTimeout(() => onSuccess(), 700);\n    }\n  }, [state]);\n\n  const handleFile = e => {\n    const file = e.target.files[0];\n    const fileReader = new FileReader();\n    fileReader.onloadend = readerEvent => {\n      const arrayBuffer = readerEvent.target.result;\n      const blob = new Blob([new Uint8Array(arrayBuffer)], {\n        type: file.type\n      });\n      setRecordedData(blob);\n      setState('recorded');\n    };\n    fileReader.readAsArrayBuffer(file);\n  };\n\n  console.log('state', state, trimData, recordedData);\n  return (\n    <div className={cn(className, 'recorder-container')}>\n      <div\n        className={cn(bp('player', { sm: 'player__sm' }), {\n          'success-animation': state === 'success'\n        })}\n      >\n        {(state === 'idle' || state === 'recording') && (\n          <CameraRecorder\n            onRecordComplete={setRecordedData}\n            isRecording={state === 'recording'}\n            setState={setState}\n            onClickRecordStart={() => setState('recording')}\n            onClickRecordStop={() => setState('recorded')}\n            onError={() => setState('notSupported')}\n          />\n        )}\n        {state === 'recorded' && (\n          <Editor\n            videoData={recordedData}\n            onEdit={setTrimData}\n            onClickCancel={() => setState('idle')}\n            onClickUpload={() => setState('processing')}\n          />\n        )}\n        {(state === 'processing' || state === 'uploading') && (\n          <div className=\"loading-state-report\">\n            <Spinner radius={200} stroke={1} visible />\n            <p className={cn('loading-state-message', textCn('wt-text-3'))}>\n              {state}...\n            </p>\n          </div>\n        )}\n        {state === 'notSupported' && (\n          <div className=\"not-supported\">\n            {/* eslint-disable-next-line jsx-a11y/accessible-emoji */}\n            <h2 className={textCn('wt-h1')}>😔</h2>\n            <p className={textCn('wt-text-1')}>\n              Your browser does not support camera recording, please choose file\n              from library\n            </p>\n            <Button\n              mode=\"contrast\"\n              icon={<AttachmentIcon />}\n              onClick={() => {\n                const input = document.createElement('input');\n                input.onchange = handleFile;\n                input.type = 'file';\n                input.capture = 'user';\n                input.accept = 'video/*';\n                input.click();\n              }}\n            >\n              Choose file\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nRecorder.propTypes = {\n  onSuccess: PropTypes.func.isRequired\n};\n\nexport default Recorder;\n","import { FFMPEGWebworkerClient } from 'ffmpeg-webworker';\n\nexport const useProcessVideo = (onProgress, onFinish) => {\n  const processVideo = async (blob, trimState) => {\n    const startTrimmerOption = trimState?.startTime\n      ? `-ss ${trimState.startTime.toFixed(3)} `\n      : '';\n    const endTrimmerOption = trimState?.endTime\n      ? ` -to ${(trimState.endTime + 0.15).toFixed(3)}`\n      : '';\n    const worker = new FFMPEGWebworkerClient();\n    worker.on('onReady', () => {\n      worker.inputFile = blob;\n      worker.runCommand(\n        `${startTrimmerOption}-strict -2 -copyts${endTrimmerOption} -c:v copy out.mp4`,\n        67108864\n      );\n    });\n    worker.on('onStdout', msg => {\n      onProgress(msg);\n    });\n    worker.on('onStart', () => {\n      onProgress('worker started');\n    });\n    worker.on('onDone', data => {\n      const newBlob = new Blob([data[0].data], { type: 'video/mp4' });\n      onFinish(newBlob);\n      // unpack to test file\n      // const url = URL.createObjectURL(newBlob);\n      // const popup = open('', '_blank');\n      // popup.location = url;\n    });\n  };\n  return processVideo;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport { Container } from '@webteam/layout';\nimport { useTextStyles } from '@webteam/typography';\nimport { useBreakpoint } from '@webteam/breakpoints';\n\nimport StoryRecorder from './story-recorder';\n\nconst RecorderPage = ({ onSuccess }) => {\n  const textCn = useTextStyles();\n  const bp = useBreakpoint();\n  return (\n    <Container>\n      <div className=\"content\">\n        <h1 className={cn('column', textCn('wt-hero'), 'header')}>\n          JetStories\n        </h1>\n        <StoryRecorder\n          className={cn('column', bp('recorder__lg', { md: 'recorder' }))}\n          onSuccess={onSuccess}\n        />\n        <p\n          className={cn(\n            'column',\n            'text',\n            textCn('wt-subtitle-2', { flow: true })\n          )}\n        >\n          Hi!\n          <br />\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor.\n        </p>\n      </div>\n    </Container>\n  );\n};\n\nRecorderPage.propTypes = {\n  onSuccess: PropTypes.func.isRequired\n};\n\nexport default RecorderPage;\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport Spinner from 'react-spinner-material';\n\nimport Button from '@webteam/button';\nimport { PlayIcon } from '@webteam/icons';\n\nimport { s3Url } from '../config';\n\nimport './story.css';\n\nconst Story = ({ onPlay, onStop, isPlaying, filePath }) => {\n  const videoRef = useRef();\n  useEffect(() => {\n    if (!isPlaying && !videoRef.current.paused) {\n      videoRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  const handleClick = () => {\n    if (videoRef.current.paused) {\n      videoRef.current.currentTime = 0;\n      videoRef.current.play();\n      onPlay();\n    } else {\n      videoRef.current.pause();\n      onStop();\n    }\n  };\n\n  const [videoIsReady, setVideoIsReady] = useState(false);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.load();\n      videoRef.current.oncanplaythrough = () => {\n        setVideoIsReady(true);\n        if (videoRef.current.paused) {\n          videoRef.current.currentTime = 2;\n        }\n      };\n      videoRef.current.onended = onStop;\n    }\n  }, [videoRef.current]);\n  return (\n    <div\n      className={cn('story', {\n        story__ready: videoIsReady,\n        story__playing: isPlaying\n      })}\n    >\n      {!videoIsReady && (\n        <Spinner\n          className=\"story-loader-spinner\"\n          radius={100}\n          stroke={1}\n          visible\n        />\n      )}\n      {/* eslint-disable-next-line jsx-a11y/media-has-caption,jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n      <div className=\"story-wrapper\" onClick={handleClick}>\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        <video\n          src={`${s3Url}${filePath}`}\n          ref={videoRef}\n          preload=\"metadata\"\n          playsInline\n        />\n        <Button\n          className=\"story-play-button\"\n          mode=\"contrast\"\n          icon={<PlayIcon />}\n        />\n      </div>\n    </div>\n  );\n};\n\nStory.propTypes = {\n  onPlay: PropTypes.func.isRequired,\n  onStop: PropTypes.func.isRequired,\n  isPlaying: PropTypes.bool,\n  filePath: PropTypes.string.isRequired\n};\n\nexport default Story;\n","import React, { useRef, useEffect } from 'react';\nimport cn from 'classnames';\nimport { colCn, rowCn } from '@webteam/layout';\nimport { useBreakpoint } from '@webteam/breakpoints';\n\nimport { useS3 } from '../aws-hook';\n\nimport { usePlayer } from './player-hook';\nimport Story from './story';\n\nconst StoryList = () => {\n  const playerRef = useRef();\n  const bp = useBreakpoint();\n  const { getList, list } = useS3();\n  useEffect(() => {\n    getList();\n  }, []);\n  const { play, stop, activePlayer } = usePlayer(playerRef);\n  console.log(\n    list.sort((a, b) => {\n      console.log(new Date(a.LastModified));\n      return new Date(b.LastModified) - new Date(a.LastModified);\n    })\n  );\n  console.log('list', list);\n  return (\n    <div className={rowCn()} ref={playerRef}>\n      {list.map((video, index) => (\n        <div\n          key={video.Key}\n          className={cn(colCn({ default: 3, lg: 4, sm: 12 }))}\n        >\n          <Story\n            filePath={video.Key}\n            onPlay={() => play(index)}\n            onStop={() => stop(index)}\n            isPlaying={activePlayer === index}\n          />\n        </div>\n      ))}\n      {list.length === 0 &&\n        new Array(bp(8, { lg: 6, sm: 3 })).fill(undefined).map((val, index) => (\n          <div key={index} className={cn(colCn({ default: 3, lg: 4, sm: 12 }))}>\n            <div className=\"story\">\n              <div className=\"story-wrapper\" />\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default StoryList;\n","import { useState } from 'react';\n\nexport const usePlayer = () => {\n  const [activePlayer, setActivePlayer] = useState();\n\n  const play = index => setActivePlayer(index);\n\n  const stop = () => setActivePlayer(undefined);\n\n  return { play, stop, activePlayer };\n};\n","import React from 'react';\n\nimport { Container } from '@webteam/layout';\n\nimport StoryList from './story-list';\n\nconst PlayerPage = () => (\n  <Container className=\"wt-offset-top-48\">\n    <StoryList />\n  </Container>\n);\n\nexport default PlayerPage;\n","import React, { useState } from 'react';\n\nimport { ThemeProvider } from '@webteam/ui-contexts';\nimport { Layout, LayoutHeader, LayoutContent } from '@webteam/layout';\n\nimport Header from './header';\nimport RecorderPage from './recorder-page';\nimport PlayerPage from './player-page';\n\nimport '@webteam/colors/lib/index.css';\n\nfunction App() {\n  const [state, setState] = useState('player');\n  return (\n    <ThemeProvider theme=\"dark\">\n      <Layout className=\"layout\">\n        <LayoutHeader>\n          <Header\n            isFull={state === 'player'}\n            onButtonClick={() =>\n              setState(state === 'player' ? 'recorder' : 'player')\n            }\n          />\n        </LayoutHeader>\n        <LayoutContent>\n          {state === 'recorder' && (\n            <RecorderPage onSuccess={() => setState('player')} />\n          )}\n          {state === 'player' && <PlayerPage />}\n        </LayoutContent>\n      </Layout>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}