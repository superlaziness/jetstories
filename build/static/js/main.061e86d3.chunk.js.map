{"version":3,"sources":["header.jsx","story-recorder/timer.jsx","aws-hook.js","config.js","story-recorder/process-hook.js","story-recorder/camera-recorder-hook.js","story-recorder/camera-recorder.jsx","story-recorder/trimmer.jsx","story-recorder/editor-hook.js","story-recorder/editor.jsx","story-recorder/story-recorder.jsx","recorder-page.jsx","story-list/story.jsx","story-list/story-list.jsx","story-list/player-hook.js","player-page.jsx","app.jsx","reportWebVitals.js","index.js"],"names":["Header","isFull","onButtonClick","textCn","useTextStyles","className","rowCn","alignItems","colCn","default","href","target","rel","onClick","mode","Timer","time","isRunning","onOver","useEffect","timeout","setTimeout","clearTimeout","cn","style","transitionDuration","useS3","useState","list","setList","AWS","config","region","credentials","CognitoIdentityCredentials","IdentityPoolId","upload","file","name","S3","ManagedUpload","params","Bucket","Key","Body","ACL","promise","then","data","console","log","err","getList","apiVersion","listObjects","Delimiter","Contents","useProcessVideo","resultRef","onUpdate","player","current","blob","trimState","a","startTrimmerOption","startTime","toFixed","endTrimmerOption","endTime","arrayBuffer","worker","Worker","ffmpegworker","onmessage","e","msg","type","postMessage","MEMFS","arguments","newBlob","Blob","Uint8Array","from","Date","getTime","URL","createObjectURL","src","play","useCameraRecorder","cameraRef","onRecordComplete","isRecording","stream","useRef","recorder","handleDateReceive","initRecorder","navigator","mediaDevices","getUserMedia","video","facingMode","width","ideal","height","audio","MediaRecorder","mimeType","ondataavailable","srcObject","getTracks","forEach","track","stop","start","startRecording","stopRecording","CameraRecorder","ref","autoPlay","muted","Trimmer","onChange","domain","values","handles","getHandleProps","map","handle","i","left","percent","marginLeft","id","right","tracks","getTrackProps","source","key","useEditor","playerRef","onEdit","trimmer","setStartTime","setEndTime","duration","setDuration","looper","playingDuration","resetTime","currentTime","runPlayer","opacity","Infinity","isNaN","Promise","r","Math","random","addEventListener","removeEventListener","trim","value","isStartTrimmed","isEndTrimmed","endTrimTime","trimEnd","Editor","videoData","Recorder","bp","useBreakpoint","state","setState","recordedData","setRecordedData","trimData","setTrimData","ffmpegMessage","setFfmpegMessage","run","v","old","color","sm","loop","controls","files","fileReader","FileReader","onloadend","readerEvent","result","readAsArrayBuffer","RecorderPage","md","flow","Story","onPlay","onStop","isPlaying","filePath","videoRef","paused","pause","videoIsReady","setVideoIsReady","oncanplaythrough","onended","story__ready","story__playing","radius","stroke","visible","preload","icon","StoryList","activePlayer","setActivePlayer","index","undefined","usePlayer","length","PlayerPage","App","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.061e86d3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colCn, rowCn, Container } from '@webteam/layout';\nimport { useTextStyles } from '@webteam/typography';\nimport Button from '@webteam/button';\n\nimport './logos.css';\n\nconst Header = ({ isFull, onButtonClick }) => {\n  const textCn = useTextStyles();\n  return (\n    <Container>\n      <div className={rowCn({ alignItems: 'end' })}>\n        <div className={colCn({ default: 'inline' })}>\n          <a\n            href=\"https://www.jetbrains.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <div className=\"jetbrains-logo _logo-jetbrains-square _size-3\" />\n          </a>\n        </div>\n        {isFull && (\n          <>\n            <div className={colCn({ default: 'auto-fill' })}>\n              <span className={textCn('wt-h2')}>JetStories</span>\n            </div>\n            <div className={colCn({ default: 'inline' })}>\n              <Button onClick={onButtonClick} mode=\"contrast\">\n                Add your story!\n              </Button>\n            </div>\n          </>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nHeader.propTypes = {\n  isFull: PropTypes.bool,\n  onButtonClick: PropTypes.func.isRequired\n};\n\nexport default Header;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nconst Timer = ({ time = 10, isRunning, onOver }) => {\n  useEffect(() => {\n    let timeout;\n    if (isRunning) {\n      timeout = setTimeout(onOver, time * 1000);\n    }\n    return () => {\n      if (timeout) clearTimeout(timeout);\n    };\n  }, [isRunning]);\n\n  return (\n    <div className={cn('timer', isRunning && 'timer__running')}>\n      <div\n        className={cn('bar', isRunning && 'bar__running')}\n        style={{ transitionDuration: `${time}s` }}\n      />\n    </div>\n  );\n};\n\nTimer.propTypes = {\n  time: PropTypes.number,\n  isRunning: PropTypes.bool,\n  onOver: PropTypes.func\n};\n\nexport default Timer;\n","import { useEffect, useState } from 'react';\nimport AWS from 'aws-sdk';\n\nimport { awsIdentityPoolId } from './config';\n\nexport const useS3 = () => {\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    AWS.config.region = 'us-east-1';\n    AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n      IdentityPoolId: awsIdentityPoolId\n    });\n  }, []);\n\n  const getList = () => {\n    const s3 = new AWS.S3({\n      apiVersion: '2006-03-01',\n      params: { Bucket: 'test-sto' }\n    });\n    s3.listObjects({ Delimiter: '/' }, (err, data) => {\n      if (data && data.Contents) setList(data.Contents);\n      if (err) console.log('failed getting list', err);\n    });\n  };\n\n  const upload = ({ file, name }) => {\n    const uploadObject = new AWS.S3.ManagedUpload({\n      params: {\n        Bucket: 'test-sto',\n        Key: name,\n        Body: file,\n        ACL: 'public-read'\n      }\n    });\n    const promise = uploadObject.promise();\n    promise.then(\n      data => {\n        console.log('uploaded', data);\n      },\n      err => {\n        console.log('error', err);\n      }\n    );\n  };\n  return { upload, getList, list };\n};\n","export const awsIdentityPoolId =\n  'us-east-1:19b76b20-93c7-4166-891b-88ebf401128e';\nexport const s3Url = 'https://test-sto.s3.amazonaws.com/';\n","import { useS3 } from '../aws-hook';\n\n// eslint-disable-next-line import/extensions\nimport ffmpegworker from '!!file-loader!ffmpeg.js/ffmpeg-worker-mp4.js';\n\nconst useProcessVideo = ({ resultRef, onUpdate }) => {\n  const player = resultRef.current;\n  const { upload } = useS3(resultRef);\n  const process = async (blob, trimState) => {\n    const startTrimmerOption = trimState?.startTime\n      ? ['-ss', trimState.startTime.toFixed(1)]\n      : [];\n    const endTrimmerOption = trimState?.endTime\n      ? ['-to', (trimState.endTime + 0.15).toFixed(1)]\n      : [];\n\n    console.log('trimmer option', startTrimmerOption, endTrimmerOption);\n    const arrayBuffer = await blob.arrayBuffer();\n    const worker = new Worker(ffmpegworker);\n    worker.onmessage = e => {\n      const msg = e.data;\n      switch (msg.type) {\n        case 'ready':\n          console.log('worker ready');\n          worker.postMessage({\n            type: 'run',\n            MEMFS: [{ name: 'input.mkv', data: arrayBuffer }],\n            arguments: [\n              '-i',\n              'input.mkv',\n              ...startTrimmerOption,\n              ...endTrimmerOption,\n              '-copyts',\n              '-vcodec',\n              'copy',\n              'out.mp4'\n            ]\n          });\n          break;\n        case 'stdout':\n          console.log('worker stdout', msg.data);\n          onUpdate(msg.data);\n          break;\n        case 'stderr':\n          console.log('worker stderr', msg.data);\n          onUpdate(msg.data);\n          break;\n        case 'done':\n          console.log('worker done', msg.data);\n          const newBlob = new Blob([Uint8Array.from(msg.data.MEMFS[0].data)], {\n            type: 'video/quicktime'\n          });\n          upload({\n            name: `${new Date().getTime()}.mp4`,\n            file: newBlob\n          });\n          const data = URL.createObjectURL(newBlob);\n          player.src = data;\n          player.play();\n          console.log('blob', blob);\n          break;\n        default:\n          console.log('default');\n          break;\n      }\n    };\n  };\n  return process;\n};\n\nexport default useProcessVideo;\n","import { useEffect, useRef } from 'react';\n\nconst useCameraRecorder = ({ cameraRef, onRecordComplete, isRecording }) => {\n  const stream = useRef();\n  const recorder = useRef(null);\n\n  const handleDateReceive = e => {\n    onRecordComplete(e.data);\n  };\n\n  const initRecorder = async () => {\n    stream.current = await navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: 'user',\n        width: { ideal: 4096 },\n        height: { ideal: 2160 }\n      },\n      audio: true\n    });\n    recorder.current = new MediaRecorder(stream.current, {\n      mimeType: 'video/x-matroska;codecs=avc1,opus'\n    });\n    recorder.current.ondataavailable = handleDateReceive;\n\n    if (cameraRef?.current) {\n      cameraRef.current.srcObject = stream.current;\n    }\n  };\n\n  useEffect(() => {\n    initRecorder();\n    return () => {\n      stream.current?.getTracks().forEach(track => {\n        track.stop();\n      });\n    };\n  }, [cameraRef]);\n\n  const startRecording = () => {\n    recorder.current?.start();\n  };\n\n  const stopRecording = () => {\n    recorder.current?.stop();\n  };\n\n  useEffect(() => {\n    if (isRecording) startRecording();\n    else stopRecording();\n  }, [isRecording]);\n};\n\nexport default useCameraRecorder;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useCameraRecorder from './camera-recorder-hook';\n\nconst CameraRecorder = ({ onRecordComplete, isRecording }) => {\n  const cameraRef = useRef();\n  useCameraRecorder({\n    cameraRef,\n    isRecording,\n    onRecordComplete\n  });\n  return <video ref={cameraRef} autoPlay muted />;\n};\n\nCameraRecorder.propTypes = {\n  onRecordComplete: PropTypes.func.isRequired,\n  isRecording: PropTypes.bool\n};\n\nexport default CameraRecorder;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Slider, Handles, Tracks } from 'react-compound-slider';\n\nimport { LeftIcon, RightIcon } from '@webteam/icons';\n\nimport './trimmer.css';\n\nconst Trimmer = ({ onChange }) => (\n  <Slider\n    domain={[0, 100]}\n    values={[0, 100]}\n    mode={2}\n    className=\"wrapper\"\n    onUpdate={onChange}\n  >\n    <div className=\"track\" />\n    <Handles>\n      {({ handles, getHandleProps }) => (\n        <div>\n          {handles.map((handle, i) => (\n            <div\n              className=\"handle\"\n              key={handle.id}\n              style={{\n                left: `${handle.percent}%`,\n                marginLeft: i === 0 ? '-30px' : 0\n              }}\n              {...getHandleProps(handle.id)}\n            >\n              {i === 0 ? (\n                <LeftIcon className=\"handle-icon handle-icon__left\" />\n              ) : (\n                <RightIcon className=\"handle-icon handle-icon__right\" />\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </Handles>\n    <Tracks left={false} right={false}>\n      {({ tracks, getTrackProps }) => (\n        <div>\n          {tracks.map(({ id, source, target }) => (\n            <div\n              style={{\n                left: `${source.percent}%`,\n                width: `${target.percent - source.percent}%`\n              }}\n              {...getTrackProps(id)}\n              key={id}\n              className=\"track\"\n            />\n          ))}\n        </div>\n      )}\n    </Tracks>\n  </Slider>\n);\n\nTrimmer.propTypes = {\n  onChange: PropTypes.func.isRequired\n};\n\nexport default Trimmer;\n","import { useEffect, useRef, useState } from 'react';\n\nconst useEditor = ({ playerRef, onEdit, blob }) => {\n  const trimmer = useRef([]);\n  const [startTime, setStartTime] = useState(0);\n  const [endTime, setEndTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n\n  const looper = e => {\n    const playingDuration =\n      (e.target.duration * trimmer.current[1]) / 100 || e.target.duration;\n    const resetTime = (trimmer.current[0] * e.target.duration) / 100 || 0;\n    if (e.target.currentTime >= playingDuration) {\n      e.target.currentTime = resetTime;\n      e.target.play();\n    }\n  };\n\n  const runPlayer = async () => {\n    const data = URL.createObjectURL(blob);\n    playerRef.current.style.opacity = 0;\n    playerRef.current.src = data;\n    // set duration chrome bug hack\n    while (\n      playerRef.current.duration === Infinity ||\n      isNaN(playerRef.current.duration)\n    ) {\n      await new Promise(r => setTimeout(r, 200));\n      console.log(playerRef.current.duration);\n      playerRef.current.currentTime = 10000000 * Math.random();\n    }\n    setDuration(playerRef.current.duration);\n    playerRef.current.currentTime = 0;\n    playerRef.current.style.opacity = 1;\n    playerRef.current.play();\n  };\n\n  useEffect(() => {\n    if (blob && playerRef.current) {\n      runPlayer();\n      playerRef.current.addEventListener('timeupdate', looper);\n    }\n    return () => {\n      playerRef.current?.removeEventListener('timeupdate', looper);\n    };\n  }, [blob]);\n\n  const trimStart = () => {\n    if (playerRef.current.duration === Infinity) return;\n    playerRef.current.currentTime =\n      (trimmer.current[0] * playerRef.current.duration) / 100;\n    playerRef.current.play();\n    setStartTime(playerRef.current.currentTime);\n  };\n\n  const trimEnd = () => {\n    if (playerRef.current.duration === Infinity) return;\n    const endTrimTime = (trimmer.current[1] * playerRef.current.duration) / 100;\n    playerRef.current.currentTime = endTrimTime - 0.2;\n    playerRef.current.play();\n    setEndTime(endTrimTime);\n  };\n\n  const trim = value => {\n    const isStartTrimmed =\n      value[0] !== trimmer.current[0] && value[1] === trimmer.current[1];\n    const isEndTrimmed =\n      value[1] !== trimmer.current[1] && value[0] === trimmer.current[0];\n    trimmer.current = value;\n    if (isStartTrimmed) trimStart();\n    if (isEndTrimmed) trimEnd();\n  };\n\n  useEffect(() => {\n    onEdit({\n      startTime,\n      endTime,\n      duration\n    });\n  }, [startTime, endTime, duration]);\n\n  return { trim };\n};\n\nexport default useEditor;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Trimmer from './trimmer';\n\nimport useEditor from './editor-hook';\n\nconst Editor = ({ onEdit, videoData }) => {\n  const playerRef = useRef();\n  const { trim } = useEditor({ onEdit, blob: videoData, playerRef });\n  return (\n    <>\n      <video ref={playerRef} muted />\n      <Trimmer onChange={trim} />\n    </>\n  );\n};\n\nEditor.propTypes = {\n  onEdit: PropTypes.func.isRequired,\n  videoData: PropTypes.object\n};\n\nexport default Editor;\n","import React, { useRef, useState } from 'react';\nimport cn from 'classnames';\n\nimport { useBreakpoint } from '@webteam/breakpoints';\nimport Button from '@webteam/button';\n\nimport Timer from './timer';\n\nimport useProcessVideo from './process-hook';\n\nimport CameraRecorder from './camera-recorder';\nimport Editor from './editor';\n\nconst Recorder = ({ className }) => {\n  const bp = useBreakpoint();\n  const [state, setState] = useState('idle');\n  const [recordedData, setRecordedData] = useState(null);\n  const [trimData, setTrimData] = useState({});\n  const [ffmpegMessage, setFfmpegMessage] = useState('');\n  const resultRef = useRef(null);\n  const run = useProcessVideo({\n    resultRef,\n    onUpdate: v => setFfmpegMessage(old => `${old}'\\n'${v}`)\n  });\n  const handleFile = e => {\n    const file = e.target.files[0];\n    const fileReader = new FileReader();\n    fileReader.onloadend = readerEvent => {\n      const arrayBuffer = readerEvent.target.result;\n      const blob = new Blob([new Uint8Array(arrayBuffer)], {\n        type: file.type\n      });\n      setRecordedData(blob);\n      setState('recorded');\n    };\n    fileReader.readAsArrayBuffer(file);\n  };\n  console.log('state', state, trimData, recordedData);\n  return (\n    <div className={cn(className, 'recorder-container')}>\n      <p style={{ color: 'white' }}>Status: {state}</p>\n      <p style={{ color: 'white' }}>Message: {ffmpegMessage}</p>\n      <div className={bp('player', { sm: 'player__sm' })}>\n        {state !== 'recorded' && (\n          <CameraRecorder\n            onRecordComplete={setRecordedData}\n            isRecording={state === 'recording'}\n          />\n        )}\n        {state === 'recorded' && (\n          <Editor videoData={recordedData} onEdit={setTrimData} />\n        )}\n        {state === 'recorded' && (\n          <video ref={resultRef} autoPlay muted loop controls />\n        )}\n      </div>\n      <Timer\n        time={10}\n        isRunning={state === 'recording'}\n        onOver={() => setState('recorded')}\n      />\n      <Button\n        mode=\"contrast\"\n        onClick={() =>\n          setState(state === 'recording' ? 'recorded' : 'recording')\n        }\n      >\n        Record\n      </Button>\n      <Button mode=\"contrast\" onClick={() => setState('idle')}>\n        Clear\n      </Button>\n      <Button mode=\"contrast\" onClick={() => run(recordedData, trimData)}>\n        Process\n      </Button>\n      <input type=\"file\" id=\"hello\" onChange={handleFile} />\n    </div>\n  );\n};\n\nexport default Recorder;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Container } from '@webteam/layout';\nimport { useTextStyles } from '@webteam/typography';\nimport { useBreakpoint } from '@webteam/breakpoints';\n\nimport StoryRecorder from './story-recorder';\n\nconst RecorderPage = () => {\n  const textCn = useTextStyles();\n  const bp = useBreakpoint();\n  return (\n    <Container>\n      <div className=\"content\">\n        <h1 className={cn('column', textCn('wt-hero'), 'header')}>\n          JetStories\n        </h1>\n        <StoryRecorder\n          className={cn('column', bp('recorder__lg', { md: 'recorder' }))}\n        />\n        <p\n          className={cn(\n            'column',\n            'text',\n            textCn('wt-subtitle-2', { flow: true })\n          )}\n        >\n          Hi!\n          <br />\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor.\n        </p>\n      </div>\n    </Container>\n  );\n};\n\nexport default RecorderPage;\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport Spinner from 'react-spinner-material';\n\nimport Button from '@webteam/button';\nimport { PlayIcon } from '@webteam/icons';\n\nimport { s3Url } from '../config';\n\nimport './story.css';\n\nconst Story = ({ onPlay, onStop, isPlaying, filePath }) => {\n  const videoRef = useRef();\n  useEffect(() => {\n    if (isPlaying && videoRef.current.paused) {\n      videoRef.current.currentTime = 0;\n      videoRef.current.play();\n    } else {\n      videoRef.current.currentTime = 0;\n      videoRef.current?.pause();\n    }\n  }, [isPlaying]);\n\n  const handleClick = () => {\n    if (isPlaying) return onStop();\n    return onPlay();\n  };\n\n  const [videoIsReady, setVideoIsReady] = useState(false);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.oncanplaythrough = () => {\n        setVideoIsReady(true);\n      };\n      videoRef.current.onended = onStop;\n    }\n  }, [videoRef.current]);\n  return (\n    <div\n      className={cn('story', {\n        story__ready: videoIsReady,\n        story__playing: isPlaying\n      })}\n    >\n      {!videoIsReady && (\n        <Spinner\n          className=\"story-loader-spinner\"\n          radius={100}\n          stroke={1}\n          visible\n        />\n      )}\n      {/* eslint-disable-next-line jsx-a11y/media-has-caption,jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n      <div className=\"story-wrapper\" onClick={handleClick}>\n        <video\n          src={`${s3Url}${filePath}`}\n          ref={videoRef}\n          preload=\"metadata\"\n          muted\n        />\n        <Button\n          className=\"story-play-button\"\n          mode=\"contrast\"\n          icon={<PlayIcon />}\n        />\n      </div>\n    </div>\n  );\n};\n\nStory.propTypes = {\n  onPlay: PropTypes.func.isRequired,\n  onStop: PropTypes.func.isRequired,\n  isPlaying: PropTypes.bool,\n  filePath: PropTypes.string.isRequired\n};\n\nexport default Story;\n","import React, { useRef, useEffect } from 'react';\nimport cn from 'classnames';\nimport { colCn, rowCn } from '@webteam/layout';\n\nimport { useS3 } from '../aws-hook';\n\nimport { usePlayer } from './player-hook';\nimport Story from './story';\n\nconst StoryList = () => {\n  const playerRef = useRef();\n  const { getList, list } = useS3();\n  console.log('list', list);\n  useEffect(() => {\n    getList();\n  }, []);\n  // const { play, activePlayer } =\n  const { play, stop, activePlayer } = usePlayer(playerRef);\n  return (\n    <div className={rowCn()} ref={playerRef}>\n      {list.map((video, index) => (\n        <div\n          key={video.key}\n          className={cn(colCn({ default: 3, md: 4, sm: 12 }))}\n        >\n          <Story\n            filePath={video.Key}\n            onPlay={() => play(index)}\n            onStop={() => stop(index)}\n            isPlaying={activePlayer === index}\n          />\n        </div>\n      ))}\n      {list.length === 0 && (\n        <>\n          <div className={cn(colCn({ default: 3, md: 4, sm: 12 }))}>\n            <div className=\"story\">\n              <div className=\"story-wrapper\" />\n            </div>\n          </div>\n          <div className={cn(colCn({ default: 3, md: 4, sm: 12 }))}>\n            <div className=\"story\">\n              <div className=\"story-wrapper\" />\n            </div>\n          </div>\n          <div className={cn(colCn({ default: 3, md: 4, sm: 12 }))}>\n            <div className=\"story\">\n              <div className=\"story-wrapper\" />\n            </div>\n          </div>\n          <div className={cn(colCn({ default: 3, md: 4, sm: 12 }))}>\n            <div className=\"story\">\n              <div className=\"story-wrapper\" />\n            </div>\n          </div>\n          <div className={cn(colCn({ default: 3, md: 4, sm: 12 }))}>\n            <div className=\"story\">\n              <div className=\"story-wrapper\" />\n            </div>\n          </div>\n          <div className={cn(colCn({ default: 3, md: 4, sm: 12 }))}>\n            <div className=\"story\">\n              <div className=\"story-wrapper\" />\n            </div>\n          </div>\n          <div className={cn(colCn({ default: 3, md: 4, sm: 12 }))}>\n            <div className=\"story\">\n              <div className=\"story-wrapper\" />\n            </div>\n          </div>\n          <div className={cn(colCn({ default: 3, md: 4, sm: 12 }))}>\n            <div className=\"story\">\n              <div className=\"story-wrapper\" />\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default StoryList;\n","import { useState } from 'react';\n\nexport const usePlayer = () => {\n  const [activePlayer, setActivePlayer] = useState();\n\n  const play = index => setActivePlayer(index);\n\n  const stop = () => setActivePlayer(undefined);\n\n  return { play, stop, activePlayer };\n};\n","import React from 'react';\n\nimport { Container } from '@webteam/layout';\n\nimport StoryList from './story-list';\n\nconst PlayerPage = () => (\n  <Container className=\"wt-offset-top-48\">\n    <StoryList />\n  </Container>\n);\n\nexport default PlayerPage;\n","import React, { useState } from 'react';\n\nimport { ThemeProvider } from '@webteam/ui-contexts';\nimport { Layout, LayoutHeader, LayoutContent } from '@webteam/layout';\n\nimport Header from './header';\nimport RecorderPage from './recorder-page';\nimport PlayerPage from './player-page';\n\nimport '@webteam/colors/lib/index.css';\n\nfunction App() {\n  const [state, setState] = useState('player');\n  return (\n    <ThemeProvider theme=\"dark\">\n      <Layout className=\"layout\">\n        <LayoutHeader>\n          <Header\n            isFull={state === 'player'}\n            onButtonClick={() => setState('recorder')}\n          />\n        </LayoutHeader>\n        <LayoutContent>\n          {state === 'recorder' && <RecorderPage />}\n          {state === 'player' && <PlayerPage />}\n        </LayoutContent>\n      </Layout>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}